
#Title[enm5 spell03 hard]
#Text[ミシェル・サンタンジェ　神託「セラフィックスノー」]
#Player[FREE]
#BackGround[Default]
#ScriptVersion[2]

script_enemy_main {
    let imgEffect = GetCurrentScriptDirectory~".\enm5eff\bossEfect.png";
    let t5        = GetCurrentScriptDirectory~".\enm5se\timer1.wav";
    let t10       = GetCurrentScriptDirectory~".\enm5se\timer2.wav";
    let tan       = GetCurrentScriptDirectory~".\enm5se\shot1.wav";
    let kira      = GetCurrentScriptDirectory~".\enm5se\shot2.wav";
    let Gspel     = GetCurrentScriptDirectory~".\enm5se\echo5.wav";
    let laser     = GetCurrentScriptDirectory~".\enm5se\Laser2.wav";
    let power     = GetCurrentScriptDirectory~".\enm5se\enemy_powereffect.wav";
    let powerl    = GetCurrentScriptDirectory~".\enm5se\power_logo.wav";
    let gekiha    = GetCurrentScriptDirectory~".\enm5se\BossEnd.wav";
    let powerla   = GetCurrentScriptDirectory~".\enm5se\power_logo.wav";
    let kaku      = GetCurrentScriptDirectory~".\enm5se\核爆.wav";
    let frame     = 0;
    let GetAngle  = 0;
    let angle     = 0;
    let angle2    = 0;
    let angleBase = 0;
    let count     = 0;
    let timer     = 0;
    let shotdir   = GetCurrentScriptDirectory ~ "data_usershot.txt";
    let MinX	  = GetClipMinX;
    let MaxX	  = GetClipMaxX;
    let CenX	  = GetCenterX;
    let MinY	  = GetClipMinY;
    let MaxY	  = GetClipMaxY;
    let CenY	  = GetCenterY;
    let T_count   = 0;
    let Damage    = 0;
    let a         = 0;
    let S_count   = 0;
    let w         = 0;
    let lp        = 0;
    let endc	  = 0;

    @Initialize {
        //SetX(MaxX+100);
        //SetY(MinY-100);

        SetLife(1000);
	SetDamageRate(0,0);

	SetInvincibility(120);

	/*弾幕削除制限　(初期値64)*/
	SetShotAutoDeleteClip(30,30,30,64);

	LoadUserShotData(shotdir);
	SetMovePosition03(CenX,CenY-100,10,5);
        LoadGraphic(imgEffect);
	Aura(8,50,50,255);
	MagicCircle(false);
	SetRateScoreSystemEnable(false);
	hpb(1,0,0);
	Timer(1,1);
	VSname(0);
	let tact = GetCommonDataEx("title","act");
	if(tact!=11){
	VSname2(0,0);
	VSname2(10,0);
	}
	EnemyTexture05b(true);
	RedMagicCircle(1,0);
	Shot_Main;
	SetEffectForZeroLife(0,0,0);
	SpellPracticeSave("hard",20);
    }

    @MainLoop {
	yield;
        SetCollisionA(GetX, GetY, 30);
        SetCollisionB(GetX, GetY, 16);

	/*制限時間処理*/
	if(GetTimer<=10 && GetTimer>=0){T_count++;}
	alternative(T_count)
	case(1,60,120,180,240){PlaySE(t10);}
	case(300,360,420,480,540){PlaySE(t5);}

	/*ボム中、使用後一定時間ダメージ無効処理*/
	if(OnBomb==true){SetDamageRate(30,50);Damage=0;}
	if(OnBomb==false){Damage++;}
	if(Damage>=100){SetDamageRate(30,50);}

	/*スペルカード延滞宣言*/
	if(S_count==1){
	CutinSP("TIREI",50,-50,4000000,60,GetCurrentScriptDirectory~".\enm5img\michel10000.png",0,0,384,512);
	CutinSP2(-280,-10,GetCurrentScriptDirectory~".\enm5spell\enm5_sn03_hard.png",0,0,384,32,255,255,255);
	BackGroundEffect;
	}
	if(S_count==50){
	Concentration(50,powerla);
	}
	
	if(S_count>=60 && frame%9==0) {
		CreateSinewaveShot(rand(GetClipMinX,GetClipMaxX),-10,1.5,90,4,10,180,243,30);
		PlaySE(kira);
		}

	a++;
	frame++;
	count++;
	S_count++;
	timer++;

	let tact = GetCommonDataEx("title","act");
	let tsst = GetCommonDataEx("title","start_stage");
	if(tact==11){
	if(OnPlayerMissed==true){
	SetCommonDataEx("title","start_stage",false);
	VanishEnemy;
	}
	if(GetEnemyLife<=10){
	SetMovePosition03(CenX-30,CenY-120,10,5);
	SetDamageRate(0,0);
	endc++;
	}
	if(endc==1){
	DeleteAllEnemyWithoutBoss;
	DefeatExplosion(GetEnemyX,GetEnemyY);
	}
	}

}//MainLoopの")"です。

    @DrawLoop {}

    @Finalize {
	let tact = GetCommonDataEx("title","act");
	if(tact==11){
	SetCommonDataEx("title","start_stage",false);
	}
	}
	
	task Shot_Main {
		loop(120){yield;}
		loop {
			let ranx = rand(-20,20);
			ascent(let i in 0..6){
				CreateHomingShot(GetX,GetY,i*60)
				}
			PlaySE(tan);
			MoveToPlayerRand;
			loop(120){yield;}
			Concentration(50,powerla);
			loop(60){yield;}
		}
	}
	
task CreateHomingShot(x,y,a){
	let obj = Obj_Create(OBJ_SHOT);
	let s = 4;
	Obj_SetPosition(obj, x, y);
	Obj_SetSpeed(obj, s);
	Obj_SetAngle(obj, a);
	ObjShot_SetGraphic(obj, 244);
	ObjShot_SetDelay(obj, 20);
	loop(20){yield;}
	loop(90){if(s>0){s-=0.06;}Obj_SetSpeed(obj, s);yield;}
	if(!Obj_BeDeleted(obj)){PlaySE(laser);}
	Obj_SetAngle(obj, atan2(GetPlayerY-Obj_GetY(obj),GetPlayerX-Obj_GetX(obj)));
	WaveOut2(obj, 30);
	loop(90){if(s<7){s+=0.03;}Obj_SetSpeed(obj, s);yield;}
	loop(90){if(s>0){s-=0.04;}Obj_SetSpeed(obj, s);yield;}
	if(!Obj_BeDeleted(obj)){PlaySE(laser);}
	Obj_SetAngle(obj, atan2(GetPlayerY-Obj_GetY(obj),GetPlayerX-Obj_GetX(obj)));
	WaveOut2(obj, 30);
	loop(90){if(s<7){s+=0.03;}Obj_SetSpeed(obj, s);yield;}
	loop(90){if(s>0){s-=0.04;}Obj_SetSpeed(obj, s);yield;}
	if(!Obj_BeDeleted(obj)){PlaySE(laser);}
	Obj_SetAngle(obj, atan2(GetPlayerY-Obj_GetY(obj),GetPlayerX-Obj_GetX(obj)));
	WaveOut2(obj, 30);
	loop(90){if(s<7){s+=0.03;}Obj_SetSpeed(obj, s);yield;}
	}
	
task CreateSinewaveShot(x,y,speed,angle,amp,om,arg,graphic,delay) {
		let t = 0;
		let px = speed*t;
		let py = amp*sin(om*t + arg);
		let a = amp*om*3.141592653/(180*speed);
		let w = 6;
		let alpha = 255;
		let count = 0;
		
		//オブジェクト弾の作成
		let obj = Obj_Create(OBJ_SHOT);
		
		//パラメータの設定
		Obj_SetCollisionToPlayer(obj,true);
		Obj_SetPosition(obj, x + px*cos(angle) - py*sin(angle), y + px*sin(angle) + py*cos(angle));
		Obj_SetSpeed(obj, 0);
		Obj_SetAngle(obj, 90);
		ObjShot_SetGraphic(obj, graphic);
		ObjShot_SetDelay(obj, delay);
		
		loop(delay){ yield; }
		
		while(count<=120)
		{
			Obj_SetAlpha(obj,alpha);
			//(px,py)座標での弾の位置を計算
			px=speed*t;
			py=amp*sin(om*t + arg);
			//回転・平行移動して実際の位置に
			Obj_SetPosition(obj, x + px*cos(angle) - py*sin(angle),
									 y + px*sin(angle) + py*cos(angle));
			//弾の方向にもangleを足す
//			Obj_SetAngle(obj, angle + atan(a*cos(om*t + arg)));
			if(Obj_BeDeleted(obj)){count++;}
			t++;
			yield;
		}
	}
	
task DelaySE(se,t) {
	loop(t){yield;}
	
	PlaySE(se);
	}
	
function MoveToPlayer_(xMove, yAdd, frame, left, top, right, bottom) {
	let x;
	let y;
	if(GetPlayerX < GetX) {
		// プレイヤーより右に敵がいれば、敵は左に動きます。
		x = GetX - xMove;
		// 但し、敵が可動領域の左端よりも左にいくようなら、右に動きます。
		if(x < left) {
			x = GetX + xMove;
		}
	} else {
		// さもなくば、敵は右に動きます。
		x = GetX + xMove;
		// 但し、敵が可動領域の右端よりも右にいくようなら、左に動きます。
		if(right < x) {
			x = GetX - xMove;
		}
	}
	// 可動領域の外に行く場合は、端っこで止めます。
	y = GetY + yAdd;
	if(y < top) {
		y = top;
	} else if(bottom < y) {
		y = bottom;
	}
	SetMovePosition03(x, y, 20,1);
}

function MoveToPlayerRand {
	MoveToPlayer_(rand(40, 80),rand(-40, 40),60,GetClipMinX+32,GetClipMinY+120,GetClipMaxX-32,GetClipMinY+160);
	}

	#include_function".\Obj_Control.txt"
	#include_function".\lib_kshot.txt"
}
