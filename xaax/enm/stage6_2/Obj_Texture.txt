task EnemyTexture06a(hv){
let spn1	= Obj_Create(OBJ_EFFECT);
let img		= GetCurrentScriptDirectory~".\enm6_2img\enm6_1.png";
let A_count	= 0;
let A_countM	= 0;
let Animetion	= false;
let AnimetionM	= false;
let AR_count	= 0;
let AL_count	= 0;
let A_returnR	= 0;
let A_returnL	= 0;
let lrz		= 0;
let cc		= 0;

LoadGraphic(img);

Obj_SetPosition(spn1,GetX,GetY);
ObjEffect_SetTexture(spn1,img);
ObjEffect_SetRenderState(spn1,ALPHA);
ObjEffect_SetPrimitiveType(spn1,PRIMITIVE_TRIANGLESTRIP);
ObjEffect_SetScale(spn1,1,1);
ObjEffect_SetLayer(spn1,3);
ObjEffect_CreateVertex(spn1,4);

loop{
cc++;
if(hv==true){
Obj_SetPosition(spn1,GetX,GetY+5*sin(cc*4));}
if(hv==false){
Obj_SetPosition(spn1,GetX,GetY);}

//この辺if文グチャグチャで気色悪い
if(Animetion==true){A_count++;}
if(AnimetionM==true){A_countM++;}
if(A_count==40){A_count=0;}
if(A_countM==40){A_countM=0;}
if(trunc(GetSpeedX)==0){A_returnR++;A_returnL++;}
if(GetSpeedX>0){AR_count++;AnimetionM=false;Animetion=false;}
if(AR_count==10){AR_count=5;}
if(GetSpeedX<0){AL_count++;AnimetionM=false;Animetion=false;}
if(AL_count==10){AL_count=5;}
if(trunc(GetSpeedX)==0&&A_returnR<=0){AR_count=20;}
if(A_returnR>=5&&AR_count>0){AR_count--;}
if(AR_count<=0){AR_count=0;A_returnR=0;AnimetionM=true;}
if(trunc(GetSpeedX)==0&&A_returnL<=0){AL_count=20;}
if(A_returnL>=5&&AL_count>0){AL_count--;}
if(AL_count<=0){AL_count=0;A_returnL=0;Animetion=true;}

if(AnimetionM==true){
if(A_countM>=0  && A_countM<=20){
ObjEffect_SetVertexXY(spn1,0,66/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,66/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,66/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,66/2,96/2);
ObjEffect_SetVertexUV(spn1,0,31,24);
ObjEffect_SetVertexUV(spn1,1,31,119);
ObjEffect_SetVertexUV(spn1,2,97,24);
ObjEffect_SetVertexUV(spn1,3,97,119);}
if(A_countM>=20 && A_countM<=40){
ObjEffect_SetVertexXY(spn1,0,66/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,66/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,66/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,66/2,96/2);
ObjEffect_SetVertexUV(spn1,0,31,144);
ObjEffect_SetVertexUV(spn1,1,31,239);
ObjEffect_SetVertexUV(spn1,2,97,144);
ObjEffect_SetVertexUV(spn1,3,97,239);}}
if(Animetion==true){
if(A_count>=0  && A_count<=20){
ObjEffect_SetVertexXY(spn1,0,66/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,66/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,66/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,66/2,96/2);
ObjEffect_SetVertexUV(spn1,0,31,24);
ObjEffect_SetVertexUV(spn1,1,31,119);
ObjEffect_SetVertexUV(spn1,2,97,24);
ObjEffect_SetVertexUV(spn1,3,97,119);}
if(A_count>=20 && A_count<=40){
ObjEffect_SetVertexXY(spn1,0,66/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,66/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,66/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,66/2,96/2);
ObjEffect_SetVertexUV(spn1,0,31,144);
ObjEffect_SetVertexUV(spn1,1,31,239);
ObjEffect_SetVertexUV(spn1,2,97,144);
ObjEffect_SetVertexUV(spn1,3,97,239);}}
if(GetSpeedX>0||GetSpeedX==0&&AnimetionM==false){
if(AR_count>=0  && AR_count<=5 ){
ObjEffect_SetVertexXY(spn1,0,76/-2,92/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,92/2);
ObjEffect_SetVertexXY(spn1,2,76/2,92/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,92/2);
ObjEffect_SetVertexUV(spn1,0,263,26);
ObjEffect_SetVertexUV(spn1,1,263,118);
ObjEffect_SetVertexUV(spn1,2,338,26);
ObjEffect_SetVertexUV(spn1,3,338,118);}
if(AR_count>=5  && AR_count<=10){
ObjEffect_SetVertexXY(spn1,0,76/-2,92/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,92/2);
ObjEffect_SetVertexXY(spn1,2,76/2,92/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,92/2);
ObjEffect_SetVertexUV(spn1,0,263,146);
ObjEffect_SetVertexUV(spn1,1,263,238);
ObjEffect_SetVertexUV(spn1,2,338,146);
ObjEffect_SetVertexUV(spn1,3,338,238);}}
if(GetSpeedX<0||GetSpeedX==0&&Animetion==false){
if(AL_count>=0  && AL_count<=5 ){
ObjEffect_SetVertexXY(spn1,0,76/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,76/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,96/2);
ObjEffect_SetVertexUV(spn1,0,142,22);
ObjEffect_SetVertexUV(spn1,1,142,118);
ObjEffect_SetVertexUV(spn1,2,217,22);
ObjEffect_SetVertexUV(spn1,3,217,118);}
if(AL_count>=5  && AL_count<=10){
ObjEffect_SetVertexXY(spn1,0,76/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,76/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,96/2);
ObjEffect_SetVertexUV(spn1,0,142,142);
ObjEffect_SetVertexUV(spn1,1,142,237);
ObjEffect_SetVertexUV(spn1,2,217,142);
ObjEffect_SetVertexUV(spn1,3,217,237);}}

yield;
}
}

task EnemyTexture06a_typeB(hv){
let spn1	= Obj_Create(OBJ_EFFECT);
let img		= GetCurrentScriptDirectory~".\enm6_2img\enm6_1.png";
let A_count	= 0;
let A_countM	= 0;
let Animetion	= false;
let AnimetionM	= false;
let AR_count	= 0;
let AL_count	= 0;
let A_returnR	= 0;
let A_returnL	= 0;
let lrz		= 0;
let cc		= 0;

LoadGraphic(img);

Obj_SetPosition(spn1,GetX,GetY);
ObjEffect_SetTexture(spn1,img);
ObjEffect_SetRenderState(spn1,ALPHA);
ObjEffect_SetPrimitiveType(spn1,PRIMITIVE_TRIANGLESTRIP);
ObjEffect_SetScale(spn1,1,1);
ObjEffect_SetLayer(spn1,3);
ObjEffect_CreateVertex(spn1,4);

loop{
cc++;
if(hv==true){
Obj_SetPosition(spn1,GetX,GetY+5*sin(cc*4));}
if(hv==false){
Obj_SetPosition(spn1,GetX,GetY);}

//この辺if文グチャグチャで気色悪い
if(Animetion==true){A_count++;}
if(AnimetionM==true){A_countM++;}
if(A_count==200){A_count=0;}
if(A_countM==200){A_countM=0;}
if(trunc(GetSpeedX)==0){A_returnR++;A_returnL++;}
if(GetSpeedX>0){AR_count++;AnimetionM=false;Animetion=false;}
if(AR_count==10){AR_count=5;}
if(GetSpeedX<0){AL_count++;AnimetionM=false;Animetion=false;}
if(AL_count==10){AL_count=5;}
if(trunc(GetSpeedX)==0&&A_returnR<=0){AR_count=20;}
if(A_returnR>=5&&AR_count>0){AR_count--;}
if(AR_count<=0){AR_count=0;A_returnR=0;AnimetionM=true;}
if(trunc(GetSpeedX)==0&&A_returnL<=0){AL_count=20;}
if(A_returnL>=5&&AL_count>0){AL_count--;}
if(AL_count<=0){AL_count=0;A_returnL=0;Animetion=true;}

if(AnimetionM==true){
if(A_countM>=0  && A_countM<=20){
ObjEffect_SetVertexXY(spn1,0,66/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,66/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,66/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,66/2,96/2);
ObjEffect_SetVertexUV(spn1,0,31,24);
ObjEffect_SetVertexUV(spn1,1,31,119);
ObjEffect_SetVertexUV(spn1,2,97,24);
ObjEffect_SetVertexUV(spn1,3,97,119);}
if(A_countM>=20 && A_countM<=40){
ObjEffect_SetVertexXY(spn1,0,66/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,66/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,66/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,66/2,96/2);
ObjEffect_SetVertexUV(spn1,0,31,144);
ObjEffect_SetVertexUV(spn1,1,31,239);
ObjEffect_SetVertexUV(spn1,2,97,144);
ObjEffect_SetVertexUV(spn1,3,97,239);}}
if(Animetion==true){
if(A_count>=0  && A_count<=20||A_count>=60 && A_count<=80){
ObjEffect_SetVertexXY(spn1,0,60/-2,94/-2);
ObjEffect_SetVertexXY(spn1,1,60/-2,94/2);
ObjEffect_SetVertexXY(spn1,2,60/2,94/-2);
ObjEffect_SetVertexXY(spn1,3,60/2,94/2);
ObjEffect_SetVertexUV(spn1,0,388,25);
ObjEffect_SetVertexUV(spn1,1,388,119);
ObjEffect_SetVertexUV(spn1,2,449,25);
ObjEffect_SetVertexUV(spn1,3,449,119);}
if(A_count>=20 && A_count<=40||A_count>=80 && A_count<=100){
ObjEffect_SetVertexXY(spn1,0,60/-2,94/-2);
ObjEffect_SetVertexXY(spn1,1,60/-2,94/2);
ObjEffect_SetVertexXY(spn1,2,60/2,94/-2);
ObjEffect_SetVertexXY(spn1,3,60/2,94/2);
ObjEffect_SetVertexUV(spn1,0,388,145);
ObjEffect_SetVertexUV(spn1,1,388,239);
ObjEffect_SetVertexUV(spn1,2,449,145);
ObjEffect_SetVertexUV(spn1,3,449,239);}
if(A_count>=100&&A_count<=120||A_count>=140&&A_count<=160){
ObjEffect_SetVertexXY(spn1,0,76/-2,114/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,114/2);
ObjEffect_SetVertexXY(spn1,2,76/2,114/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,114/2);
ObjEffect_SetVertexUV(spn1,0,503,6);
ObjEffect_SetVertexUV(spn1,1,503,119);
ObjEffect_SetVertexUV(spn1,2,579,6);
ObjEffect_SetVertexUV(spn1,3,579,119);}
if(A_count>=120&&A_count<=140||A_count>=180&&A_count<=200){
ObjEffect_SetVertexXY(spn1,0,76/-2,114/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,114/2);
ObjEffect_SetVertexXY(spn1,2,76/2,114/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,114/2);
ObjEffect_SetVertexUV(spn1,0,503,126);
ObjEffect_SetVertexUV(spn1,1,503,239);
ObjEffect_SetVertexUV(spn1,2,579,126);
ObjEffect_SetVertexUV(spn1,3,579,239);}}
if(GetSpeedX>0||GetSpeedX==0&&AnimetionM==false){
if(AR_count>=0  && AR_count<=5 ){
ObjEffect_SetVertexXY(spn1,0,76/-2,92/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,92/2);
ObjEffect_SetVertexXY(spn1,2,76/2,92/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,92/2);
ObjEffect_SetVertexUV(spn1,0,263,26);
ObjEffect_SetVertexUV(spn1,1,263,118);
ObjEffect_SetVertexUV(spn1,2,338,26);
ObjEffect_SetVertexUV(spn1,3,338,118);}
if(AR_count>=5  && AR_count<=10){
ObjEffect_SetVertexXY(spn1,0,76/-2,92/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,92/2);
ObjEffect_SetVertexXY(spn1,2,76/2,92/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,92/2);
ObjEffect_SetVertexUV(spn1,0,263,146);
ObjEffect_SetVertexUV(spn1,1,263,238);
ObjEffect_SetVertexUV(spn1,2,338,146);
ObjEffect_SetVertexUV(spn1,3,338,238);}}
if(GetSpeedX<0||GetSpeedX==0&&Animetion==false){
if(AL_count>=0  && AL_count<=5 ){
ObjEffect_SetVertexXY(spn1,0,76/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,76/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,96/2);
ObjEffect_SetVertexUV(spn1,0,142,22);
ObjEffect_SetVertexUV(spn1,1,142,118);
ObjEffect_SetVertexUV(spn1,2,217,22);
ObjEffect_SetVertexUV(spn1,3,217,118);}
if(AL_count>=5  && AL_count<=10){
ObjEffect_SetVertexXY(spn1,0,76/-2,96/-2);
ObjEffect_SetVertexXY(spn1,1,76/-2,96/2);
ObjEffect_SetVertexXY(spn1,2,76/2,96/-2);
ObjEffect_SetVertexXY(spn1,3,76/2,96/2);
ObjEffect_SetVertexUV(spn1,0,142,142);
ObjEffect_SetVertexUV(spn1,1,142,237);
ObjEffect_SetVertexUV(spn1,2,217,142);
ObjEffect_SetVertexUV(spn1,3,217,237);}}

yield;
}
}

task BackGroundEffect{
let imgBACK1	= GetCurrentScriptDirectory~".\enm6_2img\enm6_1a.png";
let imgBACK2	= [GetCurrentScriptDirectory~".\enm6_2img\enm6_1b.png",
					GetCurrentScriptDirectory~".\enm6_2img\enm6_1c.png"];
let spn1		= Obj_Create(OBJ_EFFECT);
let spn2		= [Obj_Create(OBJ_EFFECT),
					Obj_Create(OBJ_EFFECT)];
let cc			= 0;
let alpha1		= 0;
let alpha2		= 0;
let r			= 0;
let g			= 0;
let b			= 255;
let rainbow		= "AQUA";
let i			= 0;
let render		= [ALPHA,ADD];

LoadGraphic(imgBACK1);

Obj_SetPosition(spn1,CenX,CenY);
ObjEffect_SetTexture(spn1,imgBACK1);
ObjEffect_SetRenderState(spn1,ALPHA);
ObjEffect_SetPrimitiveType(spn1,PRIMITIVE_TRIANGLESTRIP);
ObjEffect_SetScale(spn1,1,1);
ObjEffect_SetLayer(spn1,0);
ObjEffect_CreateVertex(spn1,4);
ObjEffect_SetVertexXY(spn1,0,384/-2,448/-2);
ObjEffect_SetVertexXY(spn1,1,384/-2,448/2);
ObjEffect_SetVertexXY(spn1,2,384/2,448/-2);
ObjEffect_SetVertexXY(spn1,3,384/2,448/2);
ObjEffect_SetVertexUV(spn1,0,0,0);
ObjEffect_SetVertexUV(spn1,1,0,448);
ObjEffect_SetVertexUV(spn1,2,384,0);
ObjEffect_SetVertexUV(spn1,3,384,448);

loop(2){
LoadGraphic(imgBACK2[i]);
Obj_SetPosition(spn2[i],CenX,CenY);
ObjEffect_SetTexture(spn2[i],imgBACK2[i]);
ObjEffect_SetRenderState(spn2[i],render[i]);
ObjEffect_SetPrimitiveType(spn2[i],PRIMITIVE_TRIANGLESTRIP);
ObjEffect_SetScale(spn2[i],1,1);
ObjEffect_SetAngle(spn2[i],0,0,0);
ObjEffect_SetLayer(spn2[i],0);
ObjEffect_CreateVertex(spn2[i],4);
ObjEffect_SetVertexXY(spn2[i],0,384/-2,448/-2);
ObjEffect_SetVertexXY(spn2[i],1,384/-2,448/2);
ObjEffect_SetVertexXY(spn2[i],2,384/2,448/-2);
ObjEffect_SetVertexXY(spn2[i],3,384/2,448/2);
ObjEffect_SetVertexUV(spn2[i],0,0,0);
ObjEffect_SetVertexUV(spn2[i],1,0,448);
ObjEffect_SetVertexUV(spn2[i],2,384,0);
ObjEffect_SetVertexUV(spn2[i],3,384,448);
i++;
}
i=0;

loop{
cc++;
ObjEffect_SetVertexUV(spn2[0],0,0,0+cc/1.3);
ObjEffect_SetVertexUV(spn2[0],1,0,448+cc/1.3);
ObjEffect_SetVertexUV(spn2[0],2,384,0+cc/1.3);
ObjEffect_SetVertexUV(spn2[0],3,384,448+cc/1.3);
ObjEffect_SetVertexUV(spn2[1],0,0,0+cc/1.3);
ObjEffect_SetVertexUV(spn2[1],1,0,448+cc/1.3);
ObjEffect_SetVertexUV(spn2[1],2,384,0+cc/1.3);
ObjEffect_SetVertexUV(spn2[1],3,384,448+cc/1.3);

if(rainbow=="AQUA"){
	if(g<255){
		g+=5;
	}
	if(g>=255){
		rainbow="GREEN";
	}
}
if(rainbow=="GREEN"){
	if(b>0){
		b-=5;
	}
	if(b<=0){
		rainbow="YELLOW";
	}
}
if(rainbow=="YELLOW"){
	if(r<255){
		r+=5;
	}
	if(r>=255){
		rainbow="RED";
	}
}
if(rainbow=="RED"){
	if(g>0){
		g-=5;
	}
	if(g<=0){
		rainbow="PURPLE";
	}
}
if(rainbow=="PURPLE"){
	if(b<255){
		b+=5;
	}
	if(b>=255){
		rainbow="BLUE";
	}
}
if(rainbow=="BLUE"){
	if(r>0){
		r-=5;
	}
	if(r<=0){
		rainbow="AQUA";
	}
}


if(alpha1<255){alpha1+=15}
if(alpha2<150){alpha2+=15}
ObjEffect_SetVertexColor(spn1,0,alpha1,255,255,255);
ObjEffect_SetVertexColor(spn1,1,alpha1,255,255,255);
ObjEffect_SetVertexColor(spn1,2,alpha1,255,255,255);
ObjEffect_SetVertexColor(spn1,3,alpha1,255,255,255);
ObjEffect_SetVertexColor(spn2[0],0,alpha2/2,r,g,b);
ObjEffect_SetVertexColor(spn2[0],1,alpha2/2,r,g,b);
ObjEffect_SetVertexColor(spn2[0],2,alpha2/2,r,g,b);
ObjEffect_SetVertexColor(spn2[0],3,alpha2/2,r,g,b);
ObjEffect_SetVertexColor(spn2[1],0,alpha2/1.5,r,g,b);
ObjEffect_SetVertexColor(spn2[1],1,alpha2/1.5,r,g,b);
ObjEffect_SetVertexColor(spn2[1],2,alpha2/1.5,r,g,b);
ObjEffect_SetVertexColor(spn2[1],3,alpha2/1.5,r,g,b);

yield;
}
}
